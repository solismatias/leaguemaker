{"version":3,"sources":["components/Footer.js","components/StatsBar.js","components/HeroInfo.js","components/Card.js","components/HeroDetails.js","components/HeroResultsList.js","utils/getHeroesApi.js","components/HeroSearcher.js","components/TeamStats.js","pages/LeagueMaker.js","components/InfoCard.js","pages/Wellcome.js","pages/Login.js","App.js","index.js","img/logotxt.svg","img/logo.svg","img/bat.svg","img/stat.svg","img/check.svg"],"names":["Footer","className","href","target","rel","StatsBar","statNumber","total","widthPercent","Math","floor","style","width","HeroInfo","open","onClose","hero","heroTeam","setHeroTeam","onClick","biography","aliases","appearance","weight","height","work","base","totalStats","Object","entries","powerstats","forEach","value","Number","haveGoodStats","heroIndex","findIndex","heroToDelete","id","newHeroTeam","splice","Card","useState","openInfo","setOpenInfo","src","image","url","alt","name","key","intelligence","strength","speed","durability","power","combat","HeroDetails","HeroResultsList","setOpenDetails","openDetails","handleAdd","getHeroesApi","a","axios","get","response","data","HeroSearcher","averages","heroNotFound","setHeroNotFound","heroResults","setHeroResults","heroesBadStats","setHeroesBadStats","heroesGoodStats","setHeroesGoodStats","heroAlreadyTeam","setHeroAlreadyTeam","apiError","setApiError","heroBadStats","heroGoodStats","map","isHeroInTeam","heroInTeam","heroTotalStats","newHeroResults","nullVerification","heroes","formik","useFormik","initialValues","validationSchema","Yup","max","min","required","onSubmit","values","heroesFound","results","console","error","getHero","handleSubmit","autoComplete","onChange","handleChange","onBlur","handleBlur","type","touched","errors","TeamStats","LeagueMaker","navigate","useNavigate","openSearch","setOpenSearch","useEffect","localStorage","getItem","averageHeight","averageWeight","teamNumber","heroHeight","slice","heroWeight","logo","statsPower","temp","largestNum","reduce","accumulatedValue","currentValue","stat","highestStat","length","InfoCard","props","txt","Wellcome","logotxt","bat","check","stats","to","Login","loginError","setLoginError","email","password","post","token","setItem","getToken","placeholder","App","exact","path","element","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6609b8b1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <a href=\"https://github.com/solismatias\" target=\"_blank\" className=\"footer__a\" rel=\"noopener noreferrer\">GitHub repo</a>\r\n            <a href=\"https://www.linkedin.com/in/solismatias/\" target=\"_blank\" className=\"footer__a\" rel=\"noopener noreferrer\">Solis Matias</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { Footer }\r\n","import React from \"react\";\r\nimport \"./StatsBar.css\"\r\nconst StatsBar = ({ statNumber, total }) => {\r\n\r\n\r\n    let widthPercent = statNumber\r\n\r\n    if (total === 600) {\r\n        widthPercent = Math.floor(statNumber / 6)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"statsBar\">\r\n                <div className=\"statsBar__filler\" style={{ width: widthPercent + '%' }} />\r\n            </div>\r\n            <span className=\"statsBar__label\">{`${statNumber}/${total}`}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { StatsBar };","import React from 'react'\r\nimport \"./HeroInfo.css\"\r\n\r\n\r\nconst HeroInfo = ({ open, onClose, hero, heroTeam, setHeroTeam }) => {\r\n\r\n    const haveGoodStats = () => {\r\n        let totalStats = 0\r\n        Object.entries(hero.powerstats).forEach(([key, value]) => {\r\n            totalStats += Number(value)\r\n        })\r\n        if (totalStats > 300) {\r\n            return (\"good\")\r\n        }\r\n        return (\"bad\")\r\n    }\r\n\r\n\r\n    const deleteHero = () => {\r\n        let heroIndex = heroTeam.findIndex(heroToDelete => heroToDelete.id === hero.id)\r\n        let newHeroTeam = [...heroTeam]\r\n        newHeroTeam.splice(heroIndex, 1)\r\n        setHeroTeam(newHeroTeam)\r\n    }\r\n    if (!open) return null\r\n    return (\r\n        <div className=\"heroinfo__overlay\">\r\n            <div className=\"heroinfo\">\r\n                <i className=\"fas fa-times\" onClick={onClose}></i>\r\n                <div className=\"heroinfo__info-container\">\r\n                    <p className=\"heroinfo__p\">Name: {hero.biography[\"full-name\"]}</p>\r\n                    <p className=\"heroinfo__p\">Alias: {hero.biography.aliases[0]}</p>\r\n                    <p className=\"heroinfo__p\">Weight: {hero.appearance.weight[1]}</p>\r\n                    <p className=\"heroinfo__p\">Height: {hero.appearance.height[1]}</p>\r\n                    <p className=\"heroinfo__p\">Eyes Color: {hero.appearance[\"eye-color\"]}</p>\r\n                    <p className=\"heroinfo__p\">Hair Color: {hero.appearance[\"hair-color\"]}</p>\r\n                    <p className=\"heroinfo__p\">Work Place: {hero.work.base}</p>\r\n                    <p className=\"heroinfo__p\">Stats: {haveGoodStats()}</p>\r\n                </div>\r\n                <button className=\"button heroinfo__button\" onClick={deleteHero}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HeroInfo }\r\n","import React, { useState } from 'react'\r\nimport { StatsBar } from '../components/StatsBar'\r\nimport { HeroInfo } from './HeroInfo'\r\n\r\nconst Card = ({ hero, heroTeam, setHeroTeam }) => {\r\n    const [openInfo, setOpenInfo] = useState(false)\r\n    const maxStat = 100\r\n    return (\r\n        <div className=\"card\" >\r\n            <button className=\"card__info-button\">\r\n                <i className=\"fas fa-info-circle\" onClick={() => setOpenInfo(true)} />\r\n            </button>\r\n            <div className=\"hero__portrait\">\r\n                <img className=\"hero__img\" src={hero.image.url} alt=\"hero\"></img>\r\n            </div>\r\n            <p className=\"hero__name\">{hero.name}</p>\r\n            <div className=\"hero__stats\">\r\n                <p>Intelligence</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.intelligence} total={maxStat} />\r\n            </div>\r\n            <div className=\"hero__stats\">\r\n                <p>strength</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.strength} total={maxStat} />\r\n            </div>\r\n            <div className=\"hero__stats\">\r\n                <p>speed</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.speed} total={maxStat} />\r\n            </div>\r\n            <div className=\"hero__stats\">\r\n                <p>durability</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.durability} total={maxStat} />\r\n            </div>\r\n            <div className=\"hero__stats\">\r\n                <p>power</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.power} total={maxStat} />\r\n            </div>\r\n            <div className=\"hero__stats\">\r\n                <p>combat</p>\r\n                <StatsBar key={hero.id} statNumber={hero.powerstats.combat} total={maxStat} />\r\n            </div>\r\n            <HeroInfo open={openInfo} hero={hero} key={hero.id} onClose={() => setOpenInfo(false)} heroTeam={heroTeam} setHeroTeam={setHeroTeam} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Card }\r\n","import React from 'react'\r\n\r\nconst HeroDetails = ({ hero }) => {\r\n\r\n    const haveGoodStats = () => {\r\n        let totalStats = 0\r\n        Object.entries(hero.powerstats).forEach(([key, value]) => {\r\n            totalStats += Number(value)\r\n        })\r\n        if (totalStats > 300) {\r\n            return (\"good\")\r\n        }\r\n        return (\"bad\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"results__info\">\r\n            <p className=\"results__p\">Stats: {haveGoodStats()}</p>\r\n            <p className=\"results__p\">Full Name: {hero.biography[\"full-name\"]}</p>\r\n            <p className=\"results__p\">Intelligence: {hero.powerstats.intelligence}/100</p>\r\n            <p className=\"results__p\">strength: {hero.powerstats.strength}/100</p>\r\n            <p className=\"results__p\">speed: {hero.powerstats.speed}/100</p>\r\n            <p className=\"results__p\">durability: {hero.powerstats.durability}/100</p>\r\n            <p className=\"results__p\">power: {hero.powerstats.power}/100</p>\r\n            <p className=\"results__p\">combat: {hero.powerstats.combat}/100</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HeroDetails }\r\n","import React from 'react'\r\nimport { HeroDetails } from \"./HeroDetails\"\r\n\r\nconst HeroResultsList = ({ hero, setOpenDetails, openDetails, handleAdd }) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"results__item\" >\r\n                <div className=\"results__img\">\r\n                    <img className=\"result-hero__img\" alt=\"hero result\" src={hero.image.url} />\r\n                </div>\r\n                <i className=\"fas fa-info-circle results__info-button\" onClick={() => setOpenDetails(!openDetails)} />\r\n                <p className=\"results__name\">{hero.name}</p>\r\n                <i className=\"fas fa-plus results__plus\" onClick={() => handleAdd(hero)}></i>\r\n            </div>\r\n            {openDetails ? <HeroDetails hero={hero} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport { HeroResultsList }\r\n","import axios from 'axios'\r\n\r\nconst getHeroesApi = async (value) => {\r\n    const URL = \"https://superheroapi.com/api/4535411936538144/search/\"\r\n    const response = await axios.get(URL + value);\r\n    if (response.data.response === \"error\") {\r\n        return false\r\n    } else {\r\n        return response\r\n    }\r\n}\r\n\r\nexport { getHeroesApi }","import React, { useState } from 'react'\r\n// libraries\r\nimport { useFormik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n// components\r\nimport { HeroResultsList } from './HeroResultsList'\r\n// utils\r\nimport { getHeroesApi } from '../utils/getHeroesApi'\r\n// images\r\n// import cat from \"../img/r2.jpg\"\r\n// styles\r\nimport \"./HeroSearcher.css\"\r\n\r\nconst HeroSearcher = ({ setHeroTeam, heroTeam, open, onClose, averages }) => {\r\n    const [openDetails, setOpenDetails] = useState(false) // we will use this hook to display additional info of the hero \r\n    const [heroNotFound, setHeroNotFound] = useState(false) // We will use this hook to display an error message when we cannot find a hero.\r\n    const [heroResults, setHeroResults] = useState()  // store the founded heroes\r\n    const [heroesBadStats, setHeroesBadStats] = useState(false) // to display an error message when we already have 3 bad heroes\r\n    const [heroesGoodStats, setHeroesGoodStats] = useState(false) // to display an error message when we already have 3 good heroes\r\n    const [heroAlreadyTeam, setHeroAlreadyTeam] = useState(false) // to display an error message when we try to add the same hero 2 times\r\n    const [apiError, setApiError] = useState(false)\r\n\r\n    let heroBadStats = 0\r\n    let heroGoodStats = 0\r\n\r\n    heroTeam.map(hero => {\r\n        let totalStats = 0\r\n        Object.entries(hero.powerstats).forEach(([key, value]) => {\r\n            totalStats += Number(value)\r\n        })\r\n        if (totalStats > 300) {\r\n            return heroGoodStats += 1\r\n        }\r\n        return heroBadStats += 1\r\n    })\r\n\r\n\r\n    const handleAdd = (hero) => {\r\n\r\n        // 1) we check if the hero that we are trying to add is already in the team\r\n        let isHeroInTeam = false\r\n        heroTeam.forEach(heroInTeam => {\r\n            if (heroInTeam.id === hero.id) {\r\n                return isHeroInTeam = true\r\n            }\r\n        })\r\n        if (isHeroInTeam) {\r\n            return setHeroAlreadyTeam(true)\r\n        } else {\r\n            setHeroAlreadyTeam(false)\r\n        }\r\n\r\n        // 2) we can only have 3 heroes with bad stats and 3 with bad stats, so we check that\r\n        let heroTotalStats = 0  // we will add all the powerstats here, if it have more than 300, it will be good stats\r\n        Object.entries(hero.powerstats).forEach(([key, value]) => {\r\n            heroTotalStats += Number(value)\r\n        })\r\n        if (heroTotalStats > 300 && heroGoodStats === 3) {\r\n            return setHeroesGoodStats(true) //if our hero have good stats and we already have 3 heroes in the team with good stats, we will display an error message\r\n        } else if (heroTotalStats < 300 && heroBadStats === 3) {\r\n            return setHeroesBadStats(true) //if our hero have bad stats and we already have 3 heroes in the team with bad stats, we will display an error message\r\n        }\r\n        setHeroesBadStats(false)\r\n        setHeroesGoodStats(false)\r\n\r\n        // 3) add the searched hero to the team list\r\n        setHeroTeam(heroTeam => [...heroTeam, hero]);\r\n\r\n\r\n        // 4) after we add a hero to the team, we have to delete that hero from the search results\r\n        const heroIndex = heroResults.findIndex(heroToDelete => heroToDelete.id === hero.id) // to find the index of the hero\r\n        const newHeroResults = [...heroResults]\r\n        newHeroResults.splice(heroIndex, 1) // indicate the position of the hero that we will eliminate from search results\r\n        setHeroResults(newHeroResults)\r\n        averages()\r\n    }\r\n\r\n    const nullVerification = (heroes) => {\r\n        // the API has a lot of null values, so here  we will make some corrections\r\n\r\n        // assign a value of 20 for every \"null\" value in powerstats\r\n        heroes.forEach(hero => {\r\n            let power = hero.powerstats\r\n            Object.entries(power).forEach(([key, value]) => {\r\n                if (value === \"null\") {\r\n                    power[key] = 20\r\n                }\r\n            })\r\n\r\n            // replace value in height and weight\r\n            if (hero.appearance.height[1] === \"0 cm\") {\r\n                hero.appearance.height[1] = \"175 cm\"\r\n            }\r\n            if (hero.appearance.weight[1] === \"0 kg\") {\r\n                hero.appearance.weight[1] = \"80 kg\"\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            hero: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            hero: Yup.string().max(30, \"Must be 30 characters or less\").min(1, \"At least 1 are characters requiered\").required(\"A valid hero name must be provided\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            async function getHero() {\r\n                try {\r\n                    let response = await getHeroesApi(values.hero) // we make a GET request to the API with the hero we are looking for\r\n                    if (response === false) {\r\n                        setHeroNotFound(true) // status of the petition, if we get an error, we will display a \"Hero Not Found\" message \r\n                    } else {\r\n                        const heroesFound = response.data.results // here we keep all the heroes found, even heroes we already have in our hero team\r\n                        setHeroNotFound(false)\r\n                        nullVerification(heroesFound) // to fix \"null\" values\r\n                        setHeroResults(heroesFound)\r\n                        setApiError(false)\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error)\r\n                    setApiError(true)\r\n                }\r\n            }\r\n            getHero()\r\n        }\r\n    })\r\n\r\n    if (!open) return null\r\n    return (\r\n        <div className=\"herofinder__overlay\">\r\n            <div className=\"herofinder\">\r\n                <i className=\"fas fa-times\" onClick={onClose} />\r\n                <p className=\"title herofinder__title\">Find a hero</p>\r\n                <form className=\"searchbar\" onSubmit={formik.handleSubmit}>\r\n                    <div className=\"searchbar__field\">\r\n                        <i className=\"fas fa-pen\"></i>\r\n                        <input\r\n                            className=\"searchbar__input\"\r\n                            name=\"hero\"\r\n                            autoComplete=\"off\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.hero}\r\n                        />\r\n                    </div>\r\n                    <button className=\"herofinder__button\" type=\"submit\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </form>\r\n                {formik.touched.hero && formik.errors.hero ? <p className=\"herofinder__error-msg\">{formik.errors.hero}</p> : null}\r\n                <div className=\"herofinder__informative\">\r\n                    <i className=\"fas fa-exclamation-triangle\"></i>\r\n                    <p>you can add up to 6 members, <br /> you have to add 3 heroes with bad stats and 3 with good stats </p>\r\n                </div>\r\n\r\n                {heroNotFound ?\r\n                    <div className=\"herofinder__informative informative-error\">\r\n                        <i className=\"fas fa-exclamation-triangle\"></i>\r\n                        <p>Hero Not Found</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <div className=\"herofinder__added-heroes\">\r\n                    <p>Total: {heroBadStats + heroGoodStats}/6</p>\r\n                    <p>Bad Stats: {heroBadStats}/3</p>\r\n                    <p>Good Stats: {heroGoodStats}/3</p>\r\n                </div>\r\n\r\n                {heroesGoodStats ? <p className=\"herofinder__error-msg\">your team already have 3 heroes with good stats</p> : null}\r\n                {heroesBadStats ? <p className=\"herofinder__error-msg\">your team already have 3 heroes with bad stats</p> : null}\r\n                {heroAlreadyTeam ? <p className=\"herofinder__error-msg\">your team already have that hero</p> : null}\r\n                {apiError ? <p className=\"herofinder__error-msg\">An error from the API has occurred, please reload the page</p> : null}\r\n\r\n                <div className=\"results\">\r\n                    {heroResults ?\r\n                        heroResults.map((hero) => {\r\n                            return <HeroResultsList hero={hero} setOpenDetails={setOpenDetails} openDetails={openDetails} handleAdd={handleAdd} key={hero.id} />\r\n                        })\r\n                        :\r\n                        null}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HeroSearcher }\r\n","import React from 'react'\r\nimport { StatsBar } from './StatsBar'\r\n\r\n\r\nconst TeamStats = ({ heroes }) => {\r\n\r\n    const maxStat = 600\r\n\r\n    let intelligence = 0\r\n    let strength = 0\r\n    let speed = 0\r\n    let durability = 0\r\n    let power = 0\r\n    let combat = 0\r\n\r\n\r\n    heroes.forEach(hero => {\r\n        intelligence += Number(hero.powerstats.intelligence)\r\n        strength += Number(hero.powerstats.strength)\r\n        speed += Number(hero.powerstats.speed)\r\n        durability += Number(hero.powerstats.durability)\r\n        power += Number(hero.powerstats.power)\r\n        combat += Number(hero.powerstats.combat)\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"team__stats\">\r\n                <p>intelligence</p>\r\n                <StatsBar statNumber={intelligence} total={maxStat} />\r\n            </div>\r\n            <div className=\"team__stats\">\r\n                <p>strength</p>\r\n                <StatsBar statNumber={strength} total={maxStat} />\r\n            </div>\r\n            <div className=\"team__stats\">\r\n                <p>speed</p>\r\n                <StatsBar statNumber={speed} total={maxStat} />\r\n            </div>\r\n            <div className=\"team__stats\">\r\n                <p>durability</p>\r\n                <StatsBar statNumber={durability} total={maxStat} />\r\n            </div>\r\n            <div className=\"team__stats\">\r\n                <p>power</p>\r\n                <StatsBar statNumber={power} total={maxStat} />\r\n            </div>\r\n            <div className=\"team__stats\">\r\n                <p>combat</p>\r\n                <StatsBar statNumber={combat} total={maxStat} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { TeamStats }\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n// libraries\r\nimport { useNavigate } from 'react-router'\r\n// import axios from 'axios'\r\n// components\r\nimport { Card } from '../components/Card'\r\nimport { HeroSearcher } from '../components/HeroSearcher'\r\nimport { TeamStats } from '../components/TeamStats'\r\n\r\n// images\r\nimport logo from \"../img/logo.svg\"\r\n// styles\r\nimport \"./LeagueMaker.css\"\r\n\r\n\r\nconst LeagueMaker = () => {\r\n    let navigate = useNavigate();\r\n    // hooks to open or close menus\r\n    const [openSearch, setOpenSearch] = useState(false)\r\n    // const [openInfo, setOpenInfo] = useState(false)\r\n    const [heroTeam, setHeroTeam] = useState([])  // to store the added heroes\r\n\r\n\r\n    // the useEffect will run every time this page is rendered\r\n    // here we will check if we have the access token\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"userToken\")\r\n        if (!token) {\r\n            navigate(\"/login\") // if we dont have the token, we will be redirected to the login screen\r\n        }\r\n    })\r\n\r\n    const averages = (value) => {\r\n        let averageHeight = 0\r\n        let averageWeight = 0\r\n        let teamNumber = 0\r\n        if (value === \"height\") {\r\n            heroTeam.forEach(hero => {\r\n                let heroHeight = hero.appearance.height[1].slice(0, -2) // here we get the heigth in cm\r\n                heroHeight.slice(0, -2) // it will return \"180 cm\" so we elimiante the \"cm\" with slice\r\n                averageHeight += Number(heroHeight) // we convert the result to a number\r\n                teamNumber++\r\n            })\r\n            if (teamNumber === 0) return 0\r\n            return Math.floor(averageHeight / teamNumber)\r\n        } else {\r\n            heroTeam.forEach(hero => {\r\n                // and we have to do almos the same procees for weight\r\n                let heroWeight = hero.appearance.weight[1].slice(0, -2)\r\n                heroWeight.slice(0, -2)\r\n                averageWeight += Number(heroWeight)\r\n                teamNumber++\r\n            })\r\n            if (teamNumber === 0) return 0\r\n            return Math.floor(averageWeight / teamNumber)\r\n        }\r\n    }\r\n\r\n    const highestStat = () => {\r\n        let statsPower = [0, 0, 0, 0, 0, 0]\r\n        let temp = 0\r\n        heroTeam.forEach(hero => {\r\n            statsPower[0] += Number(hero.powerstats.intelligence)\r\n            statsPower[1] += Number(hero.powerstats.strength)\r\n            statsPower[2] += Number(hero.powerstats.speed)\r\n            statsPower[3] += Number(hero.powerstats.durability)\r\n            statsPower[4] += Number(hero.powerstats.power)\r\n            statsPower[5] += Number(hero.powerstats.combat)\r\n            temp++\r\n        })\r\n\r\n        if (temp === 0) {\r\n            return \"power\"\r\n        }\r\n\r\n        let largestNum = statsPower.reduce(function (accumulatedValue, currentValue) {\r\n            return Math.max(accumulatedValue, currentValue);\r\n        })\r\n        let indexHero = statsPower.findIndex(stat => stat === largestNum)\r\n        switch (indexHero) {\r\n            case 0:\r\n                return \"Intelligence\"\r\n            case 1:\r\n                return \"Strength\"\r\n            case 2:\r\n                return \"Speed\"\r\n            case 3:\r\n                return \"Durability\"\r\n            case 4:\r\n                return \"Power\"\r\n            case 5:\r\n                return \"Combat\"\r\n            default: return \"nada\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <img className=\"logo\" src={logo} alt=\"logo league maker\" />\r\n            <header className=\"header\">\r\n                <p className=\"title\">Your Team</p>\r\n                <span className=\"header__span\">{highestStat()}</span>\r\n            </header>\r\n            <section className=\"hero\">\r\n                {heroTeam ?\r\n                    heroTeam.map((hero) => {\r\n                        return (\r\n                            <Card hero={hero} key={hero.id} heroTeam={heroTeam} setHeroTeam={setHeroTeam} />\r\n                        )\r\n                    })\r\n                    :\r\n                    null}\r\n                {heroTeam.length < 6 ?\r\n                    <div className=\"card\">\r\n                        <i className=\"fas fa-plus card__plus\" onClick={() => setOpenSearch(true)} />\r\n                    </div>\r\n                    :\r\n                    null}\r\n            </section>\r\n            <section className=\"powerstats\">\r\n                <p className=\"title header\">Team stats</p>\r\n                <div className=\"team-stats__container\">\r\n                    <TeamStats heroes={heroTeam} />\r\n                </div>\r\n            </section>\r\n            <section className=\"averages\">\r\n                <p className=\"averages__title\">Averages</p>\r\n                <div className=\"averages__info\">\r\n                    <p className=\"averages__p\">weight: {averages(\"weight\")} kg</p>\r\n                    <p className=\"averages__p\">height: {averages(\"height\")} cm</p>\r\n                </div>\r\n            </section>\r\n            <HeroSearcher setHeroTeam={setHeroTeam} heroTeam={heroTeam} open={openSearch} onClose={() => setOpenSearch(false)} averages={averages} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { LeagueMaker }\r\n","import React from \"react\"\r\nconst InfoCard = (props) => {\r\n    return (\r\n        <div className=\"main__item\">\r\n            <img className=\"main__img\" src={props.image} alt=\"batman\" />\r\n            <p className=\"main__text\">{props.txt}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { InfoCard }\r\n","import React from \"react\"\r\n// Libraries\r\nimport { Link } from \"react-router-dom\"\r\n//components\r\nimport { InfoCard } from \"../components/InfoCard\"\r\n// images\r\nimport logotxt from \"../img/logotxt.svg\"\r\nimport bat from \"../img/bat.svg\"\r\nimport stats from \"../img/stat.svg\"\r\nimport check from \"../img/check.svg\"\r\n// styles\r\nimport \"./Wellcome.css\"\r\n\r\n\r\nconst Wellcome = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <img src={logotxt} alt=\"logo league maker\" />\r\n            </nav>\r\n            <main className=\"main\">\r\n                <section className=\"main__section\">\r\n                    <InfoCard image={bat} txt={\"Create a team of superheroes to your pleasing\"} />\r\n                    <InfoCard image={check} txt={\"Find the perfect combination of powers\"} />\r\n                    <InfoCard image={stats} txt={\"Inspect the general characteristics of your team\"} />\r\n                </section>\r\n                <Link to=\"/login\"><button className=\"button button--homepage\">Log In</button></Link>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Wellcome }\r\n","import React, { useState } from \"react\"\r\n// Libraries\r\nimport { useFormik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n// images\r\nimport logotxt from \"../img/logotxt.svg\"\r\n// styles\r\nimport \"./Login.css\"\r\n\r\n\r\nconst Login = () => {\r\n    const [loginError, setLoginError] = useState(false) // I use this hook to decide when to render a login error message\r\n    let navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email(\"Invalid email adress\").max(30, \"Must be 30 characters or less\").required(\"A valid email must be provided\"),\r\n            password: Yup.string().max(15, \"Must be 15 characters or less\").required(\"A valid password must be provided\")\r\n        }),\r\n        onSubmit: (values) => {\r\n            async function getToken() {\r\n                try {\r\n                    let response = await axios.post(\"http://challenge-react.alkemy.org/\", {\r\n                        // email: \"challenge@alkemy.org\",\r\n                        // password: \"react\"\r\n                        email: formik.values.email,\r\n                        password: formik.values.password\r\n                    })\r\n                    let token = response.data.token\r\n                    localStorage.setItem(\"userToken\", token)\r\n                    setLoginError(false)\r\n                    navigate(\"/home\")\r\n                } catch (error) {\r\n                    setLoginError(true) // if we get an error while login, we set this hook to true, so we can display the error message\r\n                }\r\n            }\r\n            getToken()\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <div>\r\n                <nav className=\"navbar\">\r\n                    <img src={logotxt} alt=\"logo league maker\" />\r\n                </nav>\r\n                <Link to=\"/\">\r\n                    <button className=\"button back-button\"><i className=\"fas fa-arrow-left\"></i></button>\r\n                </Link>\r\n                <section className=\"wellcome\">\r\n                    <h1 className=\"wellcome__title\">Hello!</h1>\r\n                    <p className=\"wellcome__text\">Login to your account</p>\r\n                </section>\r\n                <form className=\"form\" onSubmit={formik.handleSubmit}>\r\n                    <div className=\"form__field\">\r\n                        <i className=\"far fa-user\"></i>\r\n                        <input\r\n                            className=\"form__input\"\r\n                            placeholder=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"on\"\r\n                            value={formik.values.email}\r\n                            onBlur={formik.handleBlur}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </div>\r\n                    {formik.touched.email && formik.errors.email ? <p className=\"form__error-msg\">{formik.errors.email}</p> : null} {/* if we have some kind of error in the email field, it will be rendered here */}\r\n                    <div className=\"form__field\">\r\n                        <i className=\"fas fa-lock\"></i>\r\n                        <input\r\n                            className=\"form__input\"\r\n                            placeholder=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            autoComplete=\"off\"\r\n                            value={formik.values.password}\r\n                            onBlur={formik.handleBlur}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </div>\r\n                    {formik.touched.password && formik.errors.password ? <p className=\"form__error-msg\">{formik.errors.password}</p> : null} {/* if we have some kind of error in the password field, it will be rendered here */}\r\n                    {loginError ? <p className=\"form__error-msg\">Unauthorized: Incorrect user email or password</p> : null} {/* if loginError is true, an error message will be displayed */}\r\n                    <button className=\"button button--homepage\" type=\"submit\">login</button>\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Login }\r\n\r\n","import React from \"react\";\n// libraries\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// pages\nimport { Footer } from \"./components/Footer\";\nimport { LeagueMaker } from \"./pages/LeagueMaker\";\nimport { Wellcome } from \"./pages/Wellcome\";\nimport { Login } from \"./pages/Login\";\n// context\n// import { HeroContext } from \"./context/HeroContext\";\n\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path='/' element={<Wellcome />} />\n          <Route path='/login' element={<Login />} />\n          {/* <HeroContext.Provider> */}\n          <Route path='/home' element={<LeagueMaker />} />\n          {/* </HeroContext.Provider> */}\n          <Route path='*' element={<Login />} />     {/* if we enter to an invalid URL we will be redirected to the login page  */}\n        </Routes>\n      </BrowserRouter>\n      <Footer />\n    </>\n  );\n}\n\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/logotxt.178488a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5f761130.svg\";","module.exports = __webpack_public_path__ + \"static/media/bat.09e1553e.svg\";","module.exports = __webpack_public_path__ + \"static/media/stat.dbbe494b.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.3a65ca85.svg\";"],"sourceRoot":""}